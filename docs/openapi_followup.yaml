openapi: 3.0.3
info:
  title: FIAP 2023 - PÃ³s Tech - Tech Callenge - Fase 4 - Follow-up Microservice
  version: 1.0.0
servers:
  - url: http://localhost:8080

paths:
  /followup/order/{orderId}:
    post:
      tags:
        - Follow-up
      summary: Sync a specific order to a key-value database
      responses:
        '200':
          $ref: '#/components/requestBodies/200orderStatus'
        '400':
          $ref: '#/components/requestBodies/400orderStatus'
        '404':
          $ref: '#/components/requestBodies/404orderStatus'
        '500':
          $ref: '#/components/requestBodies/500orderStatus'

  /followup/order/refresh-cache":
    post:
      tags:
        - Follow-up
      summary: Sync all valid orders to a key-value database
      responses:
        '200':
          $ref: '#/components/requestBodies/200refreshCache'
        '500':
          $ref: '#/components/requestBodies/500orderStatus'

  /followup/order/:
    put:
      tags:
        - Follow-up
      summary: Change the status of an order
      requestBody:
        required: true
        $ref: '#/components/requestBodies/requestOrderStatus'
      responses:
        '200':
          $ref: '#/components/requestBodies/200orderStatus'
        '400':
          $ref: '#/components/requestBodies/400orderStatus'
        '404':
          $ref: '#/components/requestBodies/404orderStatus'
        '500':
          $ref: '#/components/requestBodies/500orderStatus'
    get:
      tags:
        - Follow-up
      summary: Returns all active orders to show in monitoring panel
      responses:
        '200':
          $ref: '#/components/requestBodies/200orderStatusList'
        '500':
          $ref: '#/components/requestBodies/500Standard'

  /followup/health:
    get:
      tags:
        - Health Check
      summary: Returns the health of the service
      responses:
        '200':
          $ref: '#/components/requestBodies/200healthCheck'
        '500':
          $ref: '#/components/requestBodies/500Standard'

components:
  schemas:
    orderStatusObject:
      type: object
      properties:
        orderId:
          type: integer
          example: 100
        status:
          type: string
          enum:
          - RECEIVED
          - PRODUCTION
          - READY
          - FINISHED
          example: 'RECEIVED'

  requestBodies:
    requestOrderStatus:
      description: 'Change order status'
      content:
        application/json:
          schema:
            type: object
            $ref: '#/components/schemas/orderStatusObject'

    200orderStatus:
      description: 'Order status changed'
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/orderStatusObject'
            - type: object
            properties:      
              message:
                type: string
                example: 'order status updated'

    404orderStatus:
      description: 'Not Found'
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/orderStatusObject'
            - type: object
            properties:      
              message:
                type: string
                example: 'orderId not found'

    400orderStatus:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/orderStatusObject'
            - type: object
            properties:      
              message:
                type: string
                example: '<<request error description>>'

    500orderStatus:
      description: 'Internal Server Error'
      content:
        application/json:
          schema:
            allOf:
            - $ref: '#/components/schemas/orderStatusObject'
            - type: object
            properties:      
              message:
                type: string
                example: '<<application error description>>' 

    200orderStatusList:
      description: 'List of active orders'
      content:
        application/json:
          schema:
            type: array
            items:
              allOf:
              - $ref: '#/components/schemas/orderStatusObject'
              - type: object
              properties:      
                createdAt:
                  type: string
                  format: date

    200refreshCache:
      description: 'Healthy service return'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: 'cache up to date'

    200healthCheck:
      description: 'Healthy service return'
      content:
        application/json:
          schema:
            type: object
            properties:
              status:
                type: string
                example: 'OK'

    400Standard:
      description: 'Bad Request'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: '<<request error description>>'

    500Standard:
      description: 'Internal Server Error'
      content:
        application/json:
          schema:
            type: object
            properties:
              message:
                type: string
                example: '<<application error description>>'

